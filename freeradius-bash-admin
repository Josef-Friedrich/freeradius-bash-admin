#! /bin/bash

. /etc/freeradius-bash-admin.conf


MYSQL_CREDENTIALS="--user=$MYSQL_USER --password=$MYSQL_PASSWORD $MYSQL_DATABASE"

#MYSQL_OPTIONS_PRODUCTION="--silent --skip-column-names"

MYSQL="mysql $MYSQL_CREDENTIALS $MYSQL_OPTIONS_PRODUCTION -e"

# #     # ####### #       ######  ####### ######
# #     # #       #       #     # #       #     #
# #     # #       #       #     # #       #     #
# ####### #####   #       ######  #####   ######
# #     # #       #       #       #       #   #
# #     # #       #       #       #       #    #
# #     # ####### ####### #       ####### #     #
#

function password {
  # -a algorithm
  #        use algorithm for password generation.
  #        0 - (default) pronounceable password generation
  #        1 - random character password generation
  #
  # -n num_of_pass
  #        generate num_of_pass number of passwords. Default is 6.
  #
  # -m min_pass_len
  #        generate  password  with  minimum  length   min_pass_len.    If
  #        min_pass_len  >  max_pass_len then max_pass_len = min_pass_len.
  #        Default minimum password length is 8.
  #
  # -x max_pass_len
  #        generate  password  with  maximum  length   max_pass_len.    If
  #        min_pass_len  >  max_pass_len then max_pass_len = min_pass_len.
  #        Default maximum password length is 10.
  #
  # -M mode
  #        Use symbolsets specified with  mode  for  password  generation.
  #        mode  is  a text string consisting of characters S, s, N, n, C,
  #        c, L, l. Where:
  #
  #        L      generator must use small letters symbol  set  for  every
  #               generated  password  (always  present  if  pronounceable
  #               password generation algorithm is used).

  WEAK="-m 6 -x 6 -M L"
  STRONG="-m 8 -x 8 -M CLN"

  APPEND=$STRONG

  if [ "$1" == "weak" ]; then
    APPEND=$WEAK
  fi

  apg -a 1 -n 1 $APPEND
}


# Strong
F_STG='\033[0;31m' # Red
# Emphazie
F_EMP='\033[0;32m' # Green
# Comment
F_CMT='\033[0;33m' # Yellow
# Reset
F_RST='\033[0m'

function prompt_init {
  echo -e "${F_STG}$*${F_RST}"

  echo "
Werte in eckigen Klammern werden übernommen, wenn Sie die Eingabe mit der
Eingabetaste bestätigen.
"
}

function label {
  LABEL="$1"
  SUGGESTION="$2"

  if [ -n "$SUGGESTION" ]; then
    local SUGGESTION_FORMATED=" [${F_CMT}$SUGGESTION${F_RST}]"
  fi

  echo -e -n "${F_EMP}$LABEL${F_RST}$SUGGESTION_FORMATED: "
}

function prompt {
  local NAME="$1"
  local LABEL="$2"
  local SUGGESTION="$3"

  label "$LABEL" "$SUGGESTION"
  read $NAME

  if [ -z "${!NAME}" ]; then
    eval $NAME="$SUGGESTION"
  fi

  export $NAME
}

#    #    ######  ######
#   # #   #     # #     #
#  #   #  #     # #     #
# #     # #     # #     #
# ####### #     # #     #
# #     # #     # #     #
# #     # ######  ######

function add {
  VALUE="$1"
  shift 1
  VALUES=$@

  case $VALUE in

    user)
      add_user $VALUES
    ;;

    group)
      add_group $VALUES
    ;;

    guests)
      add_guests $VALUES
    ;;

    nas)
      add_nas $VALUES
    ;;

    *)
      help
    ;;

  esac
}

function add_group {
  prompt_init "Fügen Sie eine neue Gruppe hinzu!"

  prompt "TITLE"        "Titel der Gruppe"         "Test-Gruppe"
  prompt "GROUPNAME"    "Kurzname der Gruppe"
  prompt "DESCRIPTION"  "Beschreibung der Gruppe"

  echo $TITLE

  $MYSQL "
    INSERT
      INTO groups (groupname,title,description)
      VALUES ('$GROUPNAME','$TITLE','$DESCRIPTION');
  "

  $MYSQL "
    SELECT *
      FROM groups
      WHERE groupname = '$GROUPNAME';
  "
}

function add_user {
  GUEST="$1"

  echo_question "Do you want to create a new user"

  echo_value "username"

  read USERNAME

  PASSWORD=$(password)
  echo_value  "password" $PASSWORD
  read INPUT

  if [ -n "$INPUT" ]; then
    PASSWORD="$INPUT"
  fi

  $MYSQL "
    INSERT
      INTO radcheck (username,attribute,op,value)
      VALUES ('$USERNAME','Cleartext-Password',':=','$PASSWORD');
  "

  if [ "$GUEST" == "guest" ]; then

    $MYSQL "
      INSERT
        INTO radcheck (username,attribute,op,value)
        VALUES ('$USERNAME','Access-Period',':=','60');
    "

  fi

  echo "Following values have been written to the database:"

  $MYSQL "
    SELECT *
    FROM radcheck
    WHERE username = '$USERNAME'

  "
}

function add_nas {
  #NASNAME="$1"
  #SHORTNAME="$2"
  #SECRET="$3"

  echo "Add a new NAS!"
  echo -n "shortname: "
  read SHORTNAME
  echo -n "ip address: "
  read NASNAME
  echo -n "secret: "
  read SECRET

  $MYSQL "
    INSERT
      INTO nas (nasname,shortname,secret)
      VALUES ('$NASNAME','$SHORTNAME','$SECRET');
  "
}

function add_guests {
  uninst all
  inst all

  SUM=50
  START=100
  END=$((START + SUM))

  for i in $(seq $START $END); do
    echo $i

    local USERNAME="g$i"
    local PASSWORD=$(password weak)

    $MYSQL "
      INSERT
        INTO radcheck (username,attribute,op,value)
        VALUES ('$USERNAME','Cleartext-Password',':=','$PASSWORD');
      INSERT
        INTO user (username,firstname,lastname)
        VALUES ('$USERNAME','Gast-Zugang','Nr. $i');
      INSERT
        INTO radusergroup (username,groupname,priority)
        VALUES ('$USERNAME','guests',1);
    "

  done

}

#  #####  #     # ####### #     #
# #     # #     # #     # #  #  #
# #       #     # #     # #  #  #
#  #####  ####### #     # #  #  #
#       # #     # #     # #  #  #
# #     # #     # #     # #  #  #
#  #####  #     # #######  ## ##


function _show {
  VALUE="$1"
  shift 1
  VALUES=$@

  case $VALUE in

    user)
      _show_user $VALUES
    ;;

    nas)
      _show_nas $VALUES
    ;;
    
    *)
      help
    ;;

  esac
}


function _show_user {
  $MYSQL "
    SELECT username, value as password
      FROM radcheck
      WHERE attribute = 'Cleartext-Password'
        AND username <> '';
  "
}

function _show_nas {
  $MYSQL "
    SELECT shortname, secret, nasname AS ip
      FROM nas;
  "
}

# #     # ######  ######
# #     # #     # #     #
# #     # #     # #     #
# #     # ######  #     #
# #     # #       #     #
# #     # #       #     #
#  #####  #       ######

function upd_user {

  $MYSQL "

  "
}

# ######  ####### #
# #     # #       #
# #     # #       #
# #     # #####   #
# #     # #       #
# #     # #       #
# ######  ####### #######

function del {
  VALUE="$1"
  shift 1
  VALUES=$@

  case $VALUE in

    user)
      del_user $VALUES
    ;;

    *)
      help
    ;;

  esac
}

function del_user {
  local USERNAME="$1"

  if [ -z "$USERNAME" ]; then

    echo "Enter username!"

    exit 1
  fi

  $MYSQL "
    DELETE u, rug, rc
      FROM user AS u
      JOIN radusergroup AS rug
        ON u.username = rug.username
      JOIN radcheck as rc
        ON u.username = rc.username
      WHERE u.username = '$USERNAME';
  "
}


function del_nas {
  SHORTNAME="$1"

  if [ -z "$SHORTNAME" ]; then

    echo "Enter shortname!" >2&

    exit 1

  fi

  $MYSQL "
    DELETE
      FROM nas
      WHERE shortname = '$SHORTNAME';



  "
  $MYSQL "
    DELETE u, rug, rc
      FROM user AS u
      JOIN radusergroup AS rug
        ON u.username = rug.username
      JOIN radcheck as rc
        ON u.username = rc.username
      WHERE u.username = '$USERNAME';

"
}


#  #####  #######    #    #######
# #     #    #      # #      #
# #          #     #   #     #
#  #####     #    #     #    #
#       #    #    #######    #
# #     #    #    #     #    #
#  #####     #    #     #    #

function _statistics {

  case $1 in

    user-last)
      _statistics_user_last
    ;;

    user-count)
      shift
      _statistics_user_count "$@"
    ;;

    user-log)
      _statistics_user_log
    ;;

    nas-count)
      _statistics_nas_count
    ;;

    db-table)
      _statistics_db_table "$2"
    ;;

    *)
      _statistics_help
    ;;

  esac
}

function _statistics_help {
  echo "Usage: $0 statistics <options>

Options:
  - user-last
  - user-count <interval> e.g.: 1 week or 2 month
  - user-log
  - nas-count
  - db-table <table>
"
}

function _statistics_user_last {
  $MYSQL "
    SELECT username, authdate, nasip FROM radpostauth
    WHERE reply = 'Access-Accept'
      AND nasip <> ''
    ORDER BY authdate DESC
    LIMIT 100;
  "
}

function _statistics_user_count {

  INTERVAL="$@"

  if [ -z "$INTERVAL" ] ; then
    INTERVAL="1 WEEK"
  fi

  echo "Interval: $INTERVAL"

  $MYSQL "
    SELECT username, COUNT(username) AS logincount
    FROM radpostauth
    WHERE reply = 'Access-Accept'
      AND nasip <> ''
      AND authdate > CURDATE() - INTERVAL $INTERVAL
    GROUP BY username
    ORDER BY logincount DESC;
  "
}

function _statistics_user_log {
  $MYSQL "
    SELECT *
    FROM radpostauth
    ORDER BY authdate DESC
    LIMIT 100;
  "
}

function _statistics_nas_count {
  $MYSQL "
    SELECT nas.shortname, COUNT(nas.id) AS logincount
    FROM nas
    LEFT JOIN radpostauth
    ON radpostauth.nasip = nas.nasname
    GROUP BY nas.id;
  "
}

function _statistics_db_table {
  TABLE="$1"

  if [ -z "$TABLE" ]; then

    echo "Select table!"

    $MYSQL "
      SHOW TABLES;
    "

    exit 1
  fi

  $MYSQL "
    SELECT *
    FROM $TABLE
    LIMIT 100;
  "
}

# ####### #     # ######
# #        #   #  #     #
# #         # #   #     #
# #####      #    ######
# #         # #   #
# #        #   #  #
# ####### #     # #

function exp {
  $MYSQL "
    SELECT groupname,title
    FROM groups;
  " | tr '\t' ','

}

# #       #######  #####
# #       #     # #     #
# #       #     # #
# #       #     # #  ####
# #       #     # #     #
# #       #     # #     #
# ####### #######  #####

function log {
  tail -n 100 -f /var/log/freeradius/radius.log
}

# ### #     #  #####  #######
#  #  ##    # #     #    #
#  #  # #   # #          #
#  #  #  #  #  #####     #
#  #  #   # #       #    #
#  #  #    ## #     #    #
# ### #     #  #####     #

function inst {

  inst_database

  case "$1" in
    all)
      inst_user
      inst_groups
      inst_nas
      inst_radacct
      inst_radcheck
      inst_radgroupcheck
      inst_radgroupreply
      inst_radreply
      inst_radusergroup
      inst_radpostauth
      inst_cui
      inst_ippool
      inst_wimax
    ;;

    common)
      inst_user
      inst_groups
      inst_nas
      inst_radacct
      inst_radcheck
      inst_radgroupcheck
      inst_radgroupreply
      inst_radreply
      inst_radusergroup
      inst_radpostauth
    ;;

    user)
      inst_user
    ;;

    groups)
      inst_groups
    ;;

    nas)
      inst_nas
    ;;

    radacct)
      inst_radacct
    ;;

    radcheck)
      inst_radcheck
    ;;

    radgroupcheck)
      inst_radgroupcheck
    ;;

    radgroupreply)
      inst_radgroupreply
    ;;

    radreply)
      inst_radreply
    ;;

    radusergroup)
      inst_radusergroup
    ;;

    radpostauth)
      inst_radpostauth
    ;;

    cui)
      inst_cui
    ;;

    ippool)
      inst_ippool
    ;;

    wimax)
      inst_wimax
    ;;

    *)
      inst_help
    ;;

  esac

}

function inst_help {
  echo "usage: rad inst <table>

    all    (user, nas, groups, radacct, radcheck, radgroupcheck, radgroupreply,
            radreply, radusergroup, radpostauth, cui, ippool, wimax)
    common (user, nas, groups, radacct, radcheck, radgroupcheck, radgroupreply,
            radreply, radusergroup, radpostauth)
    user
    group
    nas
    radacct
    radcheck
    radgroupcheck
    radgroupreply
    radreply
    radusergroup
    radpostauth
    cui
    ippool
    wimax"
}

function inst_database {
  $MYSQL "
    CREATE DATABASE IF NOT EXISTS radius;
  "
}

#
# Table structure for table 'user'
#
function inst_user {
  $MYSQL "

    CREATE TABLE user (

      id                    int(10)                 NOT NULL auto_increment,
      username              varchar(64)             NOT NULL UNIQUE default '',
      firstname             varchar(128)            NOT NULL default '',
      lastname              varchar(128)            NOT NULL default '',
      description           varchar(200)            NOT NULL default '',

      PRIMARY KEY (id),
      KEY username_key (username)

    );

  "
}

#
# Table structure for table 'groups'
#
function inst_groups {
  $MYSQL "

    CREATE TABLE groups (

      id                    int(10)                 NOT NULL auto_increment,
      groupname             varchar(64)             NOT NULL UNIQUE default '',
      title                 varchar(128)            NOT NULL default '',
      description           varchar(200)            NOT NULL default '',

      PRIMARY KEY (id),
      KEY groupname_key (groupname)

    );

  "
}

#
# Table structure for table 'nas'
#
function inst_nas {
  $MYSQL "

    CREATE TABLE nas (

      id                    int(10)                 NOT NULL auto_increment,
      nasname               varchar(128)            NOT NULL,
      shortname             varchar(32),
      type                  varchar(30)             DEFAULT 'other',
      ports                 int(5),
      secret                varchar(60)             DEFAULT 'secret' NOT NULL,
      server                varchar(64),
      community             varchar(50),
      description           varchar(200)            DEFAULT 'RADIUS Client',

      PRIMARY KEY (id),
      KEY nasname (nasname)

    );

  "
}


#
# Table structure for table 'radacct'
#
function inst_radacct {
  $MYSQL "

    CREATE TABLE radacct (

      radacctid             bigint(21)              NOT NULL auto_increment,
      acctsessionid         varchar(64)             NOT NULL default '',
      acctuniqueid          varchar(32)             NOT NULL default '',
      username              varchar(64)             NOT NULL default '',
      groupname             varchar(64)             NOT NULL default '',
      realm                 varchar(64)             default '',
      nasipaddress          varchar(15)             NOT NULL default '',
      nasportid             varchar(15)             default NULL,
      nasporttype           varchar(32)             default NULL,
      acctstarttime         datetime                NULL default NULL,
      acctstoptime          datetime                NULL default NULL,
      acctsessiontime       int(12)                 default NULL,
      acctauthentic         varchar(32)             default NULL,
      connectinfo_start     varchar(50)             default NULL,
      connectinfo_stop      varchar(50)             default NULL,
      acctinputoctets       bigint(20)              default NULL,
      acctoutputoctets      bigint(20)              default NULL,
      calledstationid       varchar(50)             NOT NULL default '',
      callingstationid      varchar(50)             NOT NULL default '',
      acctterminatecause    varchar(32)             NOT NULL default '',
      servicetype           varchar(32)             default NULL,
      framedprotocol        varchar(32)             default NULL,
      framedipaddress       varchar(15)             NOT NULL default '',
      acctstartdelay        int(12)                 default NULL,
      acctstopdelay         int(12)                 default NULL,
      xascendsessionsvrkey  varchar(10)             default NULL,

      PRIMARY KEY (radacctid),
      KEY username (username),
      KEY framedipaddress (framedipaddress),
      KEY acctsessionid (acctsessionid),
      KEY acctsessiontime (acctsessiontime),
      KEY acctuniqueid (acctuniqueid),
      KEY acctstarttime (acctstarttime),
      KEY acctstoptime (acctstoptime),
      KEY nasipaddress (nasipaddress)

    );
  "
}

#
# Table structure for table 'radcheck'
#
function inst_radcheck {
  $MYSQL "

    CREATE TABLE radcheck (

      id                    int(11)                 unsigned NOT NULL auto_increment,
      username              varchar(64)             NOT NULL default '',
      attribute             varchar(64)             NOT NULL default '',
      op                    char(2)                 NOT NULL DEFAULT '==',
      value                 varchar(253)            NOT NULL default '',

      PRIMARY KEY (id),
      KEY username (username(32))

    );
  "
}

#
# Table structure for table 'radgroupcheck'
#
function inst_radgroupcheck {
  $MYSQL "

    CREATE TABLE radgroupcheck (

      id                    int(11)                 unsigned NOT NULL auto_increment,
      groupname             varchar(64)             NOT NULL default '',
      attribute             varchar(64)             NOT NULL default '',
      op                    char(2)                 NOT NULL DEFAULT '==',
      value                 varchar(253)            NOT NULL default '',

      PRIMARY KEY  (id),
      KEY groupname (groupname(32))

    );
  "
}

#
# Table structure for table 'radgroupreply'
#
function inst_radgroupreply {
  $MYSQL "

    CREATE TABLE radgroupreply (

      id                    int(11)                 unsigned NOT NULL auto_increment,
      groupname             varchar(64)             NOT NULL default '',
      attribute             varchar(64)             NOT NULL default '',
      op                    char(2)                 NOT NULL DEFAULT '=',
      value                 varchar(253)            NOT NULL default '',

      PRIMARY KEY  (id),
      KEY groupname (groupname(32))

    );

  "
}

#
# Table structure for table 'radreply'
#
function inst_radreply {
  $MYSQL "

    CREATE TABLE radreply (

      id                    int(11)                 unsigned NOT NULL auto_increment,
      username              varchar(64)             NOT NULL default '',
      attribute             varchar(64)             NOT NULL default '',
      op                    char(2)                 NOT NULL DEFAULT '=',
      value                 varchar(253)            NOT NULL default '',

      PRIMARY KEY (id),
      KEY username (username(32))

    );

  "
}

#
# Table structure for table 'radusergroup'
#
function inst_radusergroup {
  $MYSQL "

    CREATE TABLE radusergroup (

      username              varchar(64)             NOT NULL default '',
      groupname             varchar(64)             NOT NULL default '',
      priority              int(11)                 NOT NULL default '1',

      KEY username (username(32))
    ) ;

  "
}

#
# Table structure for table 'radpostauth'
#
function inst_radpostauth {
  $MYSQL "

    CREATE TABLE radpostauth (

      id                    int(11)                 NOT NULL auto_increment,
      username              varchar(64)             NOT NULL default '',
      pass                  varchar(64)             NOT NULL default '',
      nasip                 varchar(64)             NOT NULL default '',
      reply                 varchar(32)             NOT NULL default '',
      authdate              timestamp               NOT NULL,

      PRIMARY KEY (id)

    );

  "
}

#
# Table structure for table 'cui'
#
function inst_cui {
  $MYSQL "

    CREATE TABLE cui (

      clientipaddress       varchar(15)             NOT NULL default '',
      callingstationid      varchar(50)             NOT NULL default '',
      username              varchar(64)             NOT NULL default '',
      cui                   varchar(32)             NOT NULL default '',
      creationdate          timestamp               NOT NULL default CURRENT_TIMESTAMP,
      lastaccounting        timestamp               NOT NULL default '0000-00-00 00:00:00',

      PRIMARY KEY  (username,clientipaddress,callingstationid)

    ) ENGINE=MyISAM DEFAULT CHARSET=latin1;
  "
}

#
# Table structure for table 'radippool'
#
function inst_ippool {
  $MYSQL "

    CREATE TABLE radippool (

      id                    int(11)                 unsigned NOT NULL auto_increment,
      pool_name             varchar(30)             NOT NULL,
      framedipaddress       varchar(15)             NOT NULL default '',
      nasipaddress          varchar(15)             NOT NULL default '',
      calledstationid       VARCHAR(30)             NOT NULL,
      callingstationid      VARCHAR(30)             NOT NULL,
      expiry_time           DATETIME                NULL default NULL,
      username              varchar(64)             NOT NULL default '',
      pool_key              varchar(30)             NOT NULL,

      PRIMARY KEY (id),
      KEY radippool_poolname_expire (pool_name, expiry_time),
      KEY framedipaddress (framedipaddress),
      KEY radippool_nasip_poolkey_ipaddress (nasipaddress, pool_key, framedipaddress)

    ) ENGINE=InnoDB;
  "
}

#
# WiMAX Table structure for table 'wimax',
# which replaces the 'radpostauth' table.
#
function inst_wimax {
  $MYSQL "

    CREATE TABLE wimax (

      id                    int(11)                 NOT NULL auto_increment,
      username              varchar(64)             NOT NULL default '',
      authdate              timestamp               NOT NULL,
      spi                   varchar(16)             NOT NULL default '',
      mipkey                varchar(400)            NOT NULL default '',
      lifetime              int(12)                 default NULL,

      PRIMARY KEY  (id),
      KEY username (username),
      KEY spi (spi)

    );
  "
}

# ######  ######  ####### ######
# #     # #     # #       #     #
# #     # #     # #       #     #
# ######  ######  #####   ######
# #       #   #   #       #
# #       #    #  #       #
# #       #     # ####### #

function prep {
  $MYSQL "
    INSERT INTO radgroupcheck
      (groupname,attribute,op,value)
      VALUES
      ('guests45min','Access-Period',':=', 2700),
      ('guests90min','Access-Period',':=', 5400),
      ('guests9hours','Access-Period',':=', 32400);
  "

  $MYSQL "
    INSERT INTO radgroupreply
      (groupname,attribute,op,value)
      VALUES
      ('guests45min','Reply-Message',':=', 'Gast-Zugang für 45 Minuten.'),
      ('guests90min','Reply-Message',':=', 'Gast-Zugang für 90 Minuten.'),
      ('guests9hours','Reply-Message',':=', 'Gast-Zugang für 9 Stunden.');
  "

}

# #     # #     # ### #     #  #####  #######
# #     # ##    #  #  ##    # #     #    #
# #     # # #   #  #  # #   # #          #
# #     # #  #  #  #  #  #  #  #####     #
# #     # #   # #  #  #   # #       #    #
# #     # #    ##  #  #    ## #     #    #
#  #####  #     # ### #     #  #####     #

function uninst {


  case "$1" in
    all)
      TABLES="user, groups, nas, radacct, radcheck, radgroupcheck, radgroupreply, radreply, radusergroup, radpostauth, cui, radippool, wimax"
    ;;

    common)
      TABLES="user, groups, nas, radacct, radcheck, radgroupcheck, radgroupreply, radreply, radusergroup, radpostauth"
    ;;

    user)
      TABLES="user"
    ;;

    groups)
      TABLES="groups"
    ;;

    nas)
      TABLES="nas"
    ;;

    radacct)
      TABLES="radacct"
    ;;

    radcheck)
      TABLES="radcheck"
    ;;

    radgroupcheck)
      TABLES="radgroupcheck"
    ;;

    radgroupreply)
      TABLES="radgroupreply"
    ;;

    radreply)
      TABLES="radreply"
    ;;

    radusergroup)
      TABLES="radusergroup"
    ;;

    radpostauth)
      TABLES="radpostauth"
    ;;

    cui)
      TABLES="cui"
    ;;

    ippool)
      TABLES="radippool"
    ;;

    wimax)
      TABLES="wimax"
    ;;

    *)
      uninst_help
    ;;

  esac

  if [ -n "$TABLES" ]; then

    $MYSQL "
      DROP TABLE IF EXISTS
       $TABLES;
    "

  fi

}

function uninst_help {
  echo "usage: rad uninst <table>

    all    (user, nas, groups, radacct, radcheck, radgroupcheck, radgroupreply,
            radreply, radusergroup, radpostauth, cui, ippool, wimax)
    common (user, nas, groups, radacct, radcheck, radgroupcheck, radgroupreply,
            radreply, radusergroup, radpostauth)
    user
    groups
    nas
    radacct
    radcheck
    radgroupcheck
    radgroupreply
    radreply
    radusergroup
    radpostauth
    cui
    ippool
    wimax"
}

# #     # ####### #       ######
# #     # #       #       #     #
# #     # #       #       #     #
# ####### #####   #       ######
# #     # #       #       #
# #     # #       #       #
# #     # ####### ####### #

function _help {
  echo "usage: $0 <command> [<args>]

The commands are:
   add              Add user, group, nas etc.
   show             Show user, group, nas etc.
   update           Update user, group, nas etc.
   delete           Delete user, group, nas etc.
   help             Display help topics
   statistics       Show statistics
   log              Show logs
   install          Install
   uninstall        Uninstall
   prepopulate      Prepopulate"
}

#  #####     #     #####  #######
# #     #   # #   #     # #
# #        #   #  #       #
# #       #     #  #####  #####
# #       #######       # #
# #     # #     # #     # #
#  #####  #     #  #####  #######

case "$1" in

  add)
    shift 1
    add $@
    ;;

  show)
    shift 1
    _show $@
    ;;

  update)
    shift 1
    _update $@
    ;;

  delete)
    shift 1
    _delete $@
    ;;

  help)
    shift 1
    _help
    ;;

  statistics)
    shift 1
    _statistics $@
    ;;

  exp)
    shift 1
    exp $@
    ;;

  log)
    shift 1
    _log $@
    ;;

  install)
    shift 1
    _install $@
    ;;

  uninstall)
    shift 1
    _uninstall $@
    ;;

  prepopulate)
    shift 1
    _prepopulate $@
    ;;

  *)
    _help
    ;;

esac

# :vim set TlistOpen: #
